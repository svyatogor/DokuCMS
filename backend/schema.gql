type StaticText implements Block {
  id: ID!
  ref: ID
  _type: String!
  content: [I18nString]
}

interface Block {
  _type: String!
  ref: ID
}

type I18nString {
  locale: String
  value: String
}

type Section {
  key: String
  blocks: [Block]
}

type PageDefinition {
  id: ID!
  slug: String
  published: Boolean
  parent: ID
  title: [I18nString]
}

type Page {
  id: ID!
  slug: String
  published: Boolean
  layout: String
  parent: Page
  title: [I18nString]
  sections: [Section]
}

input I18nStringInput {
  locale: String
  value: String
}

input PageInput {
  id: ID
  slug: String
  published: Boolean
  layout: String
  parent: ID
  title: I18nStringInput
}

input BlockRef {
  page: ID!
  section: String!
  block: Int!
}

type Query {
  pages: [Page]
  page(id: ID!): Page
  staticText(id: ID!): StaticText
}

type Mutation {
  upsertPage(page: PageInput!): Page
  saveStaticText(id: ID!, content: I18nStringInput!): StaticText
}